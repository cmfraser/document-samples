# Notes:
#   1. This OpenAPI YAML sample (the "Sample") is from a larger API.
#   2. Security definitions have been omitted from the Sample.
#   3. The Sample is for illustrative purposes only.
#   4. The Sample has been released under the MIT License:
#
# Copyright (c) 2020 Bioanalytical Computing, LLC
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

openapi: 3.0.1

info:
  title: Remote Temperature Monitor
  description: |
    (API EXCERPT) Allows a remote temperature monitor to retrieve configuration data
    from a server.
  contact:
    email: notaperson@fictional.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  version: 0.1.0

servers:
  - url: 'https://www.fictional.com/vi'

paths:
  '/monitors/{monitorId}/configuration':
    get:
      description: >
        Gets configuration data for a remote temperature monitor having ID
        {monitorId}.
      parameters:
        - name: monitorId
          in: path
          description: >
            The ID of the remote temperature monitor requesting the
            configuration data.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful (configuration data included).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configuration'
        '404':
          description: The monitor ID included in the request was not found.
          content: {}

components:
  schemas:
    configuration:
      type: object
      properties:
        timestamp:
          type: integer
          description: >
            The time when the server last updated the configuration details for
            the remote temperature monitor.
        recordingTimeInterval:
          type: integer
          description: >
            The amount of time, in seconds, between the temperature recordings
            that the remote temperature monitor makes. For example, if
            recordingTimeInterval is set to 2 seconds, then the monitor will
            record the temperature 2 seconds after the monitor last
            recorded the temperature.
        reportingTimeInterval:
          type: integer
          description: >
            The amount of time, in seconds, between the temperature reports that
            the remote temperature monitor sends to the server. For example, if
            the reportingTimeInterval is set to 15 seconds, then the monitor
            will send the next report (with multiple temperature recordings) to
            the server 15 seconds after the monitor sent the last report to the
            server.
        temperatureUnits:
          type: string
          description: >
            The units in which the remote temperature monitor should report the
            temperature to the server.
          enum:
            - Celsius
            - Fahrenheit
      description: >
        Configuration data that the server returns to a remote temperature
        monitor in response to that monitor's GET request.
